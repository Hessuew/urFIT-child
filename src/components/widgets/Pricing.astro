---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Pricing as Props } from '~/types';
import ImpactCard from './pricing/ImpactCard.astro';
import ImpactMetrics from './pricing/ImpactMetrics.astro';
import RibbonBadge from './pricing/RibbonBadge.astro';

const {
  title = '',
  subtitle = '',
  tagline = '',
  impactFactors = [],
  id,
  animated = true,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper
  id={id}
  animated={animated}
  isDark={isDark}
  containerClass={`max-w-7xl xl:max-w-[1280px] mx-auto ${classes?.container ?? ''}`}
  bg={bg}
>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />
  <div class="flex items-stretch justify-center">
    <div
      class="grid grid-cols-3 gap-4 xl:gap-[16px] dark:text-white sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3"
    >
      {
        impactFactors &&
          impactFactors.map(
            ({
              title,
              subtitle,
              impactFactor,
              impactLabel,
              items,
              callToAction,
              hasRibbon = false,
              ribbonTitle,
              medalColor,
              position,
            }) => (
              <ImpactCard
                title={title}
                subtitle={subtitle}
                position={position}
                callToAction={callToAction}
                hasRibbon={hasRibbon}
              >
                {hasRibbon && medalColor && <RibbonBadge slot="ribbon" title={ribbonTitle} medalColor={medalColor} />}

                <ImpactMetrics impactFactor={impactFactor} impactLabel={impactLabel} items={items} />
              </ImpactCard>
            )
          )
      }
    </div>
  </div>
</WidgetWrapper>
