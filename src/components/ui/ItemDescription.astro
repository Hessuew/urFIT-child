---
import { twMerge } from 'tailwind-merge';

export interface Props {
  //   items?: Array<Item>;
  //   defaultIcon?: string;
  classes?: Record<string, string>;
  description:
    | string
    | {
        text: string;
        link?: boolean;
        subtitle?: boolean;
        classes?: Record<string, string>;
      }[]
    | undefined;
}

const { classes = {}, description } = Astro.props as Props;

const { description: descriptionClass = '' } = classes;
---

{
  description && Array.isArray(description)
    ? description.map((item) =>
        item.link ? (
          <a
            class={twMerge(
              'text-blue-700 mt-2 xl:mt-[8px] hover:underline break-all',
              descriptionClass,
              classes?.description
            )}
            set:html={item.text}
            href={item.text.toString()}
            target="_blank"
          />
        ) : (
          <p
            class={twMerge(
              'text-base xl:text-[16px] xl:leading-[24px]  text-muted mt-2 xl:mt-[8px]',
              descriptionClass,
              classes?.description,
              item.classes?.subtitle,
              item.subtitle && 'font-bold text-lg xl:text-[18px] xl:leading-[28px]'
              // item.subtitle && "text-dark dark:text-white font-semibold"
            )}
            set:html={item.text}
          />
        )
      )
    : description && (
        <p
          class={twMerge(
            'text-base xl:text-[16px] xl:leading-[24px] text-muted mt-2 xl:mt-[8px]',
            descriptionClass,
            classes?.description
          )}
          set:html={description}
        />
      )
}
