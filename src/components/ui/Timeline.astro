---
import type { Item } from '~/types';
import { Icon } from 'astro-icon/components';
import { twMerge } from 'tailwind-merge';
import ItemDescription from './ItemDescription.astro';

export interface Props {
  items?: Array<Item>;
  defaultIcon?: string;
  classes?: Record<string, string>;
}

const { items = [], classes = {}, defaultIcon } = Astro.props as Props;

const {
  container: containerClass = '',
  panel: panelClass = '',
  title: titleClass = '',
  icon: defaultIconClass = 'text-primary dark:text-slate-200 border-primary dark:border-blue-700',
  line: lineClass = '',
} = classes;
---

{
  items && items.length && (
    <div class={containerClass}>
      {items.map(({ title, description, icon, classes: itemClasses = {} }, index = 0) => (
        <div
          class={twMerge(
            'flex intersect-once intersect-tenth sm:intersect-quarter motion-safe:opacity-0 motion-safe:intersect:animate-fade',
            panelClass,
            itemClasses?.panel
          )}
        >
          <div class="flex flex-col items-center mr-4 xl:mr-[16px] rtl:mr-0 rtl:ml-4 xl:rtl:mr-[16px]">
            <div>
              <div class="flex items-center justify-center">
                {(icon || defaultIcon) && (
                  <Icon
                    name={icon || defaultIcon}
                    class={twMerge(
                      'w-10 h-10 xl:w-[40px] xl:h-[40px] p-2 xl:p-[8px] rounded-full border-2',
                      defaultIconClass,
                      itemClasses?.icon
                    )}
                  />
                )}
              </div>
            </div>
            {index !== items.length - 1 && (
              <div class={twMerge('w-px h-full bg-black/10 dark:bg-slate-400/50', lineClass, itemClasses?.line)} />
            )}
          </div>
          <div class={`pt-1 xl:pt-[4px] ${index !== items.length - 1 ? 'pb-8 xl:pb-[32px]' : ''}`}>
            {title && (
              <p
                class={twMerge('text-xl xl:text-[20px] xl:leading-[28px] font-bold', titleClass, itemClasses?.title)}
                set:html={title}
              />
            )}
            <ItemDescription description={description} classes={itemClasses} />
          </div>
        </div>
      ))}
    </div>
  )
}
